[

  //
  //Spoof
  //
  //Maybe put these under collection Network.Spoof ?
  //


  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "Spoof.GSM.Status",
    "name": "TelephonyManager.getSimState",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimState",
    "parameterTypes": [ ],
    "returnType": "int",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns a constant indicating the state of the default SIM card. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getsimstate",
    "settings":[ "phone.simstate" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "Spoof.GSM.Status",
    "name": "TelephonyManager.getDataState",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getDataState",
    "parameterTypes": [ ],
    "returnType": "int",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns a constant indicating the current data connection state (cellular). ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getdatastate",
    "settings":[ "phone.datastate" ]
  },

  //
  //End of spoof
  //

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getCellLocation",
    "author": "M66B,hKFirEs,OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getCellLocation",
    "parameterTypes": [ ],
    "returnType": "android.telephony.CellLocation",
    "minSdk": 5,
    "maxSdk": 999,
    "version": 1,
    "description": "Replace the built-in hook to fake cid and lac with getCellLocation method,for gsm users only.Don't use with my previous getCID and getLAC hooks simultaneously.Setting must match exactly like \\\"LAC,CID\\\",for example,\\\"26550,187363073\\\".If you want to get a fake location by Celluar,you should also download and enable my modified getNetworkOperator hook definition.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getcelllocation",
    "settings":[ "LAC,CID" ]
  },
  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getDeviceId",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getDeviceId",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones. Return null if device ID is not available.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getdeviceid",
    "settings":[ "value.imei", "value.meid" ]
  },
  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getDeviceId/slot",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getDeviceId",
    "parameterTypes": [ "int" ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones. Return null if device ID is not available.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getdeviceid",
    "settings":[ "value.imei", "value.meid" ]
  },
  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getGroupIdLevel1",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getGroupIdLevel1",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the Group Identifier Level1 for a GSM phone. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one"
  },
  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getImei",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getImei",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the IMEI (International Mobile Equipment Identity). Return null if IMEI is not available.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getimei",
    "settings":[ "value.imei" ]
  },
  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getImei/slot",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getImei",
    "parameterTypes": [ "int" ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the IMEI (International Mobile Equipment Identity). Return null if IMEI is not available.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getimei",
    "settings":[ "value.imei" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getLine1Number",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getLine1Number",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the phone number string for line 1, for example, the MSISDN for a GSM phone for a particular subscription. Return null if it is unavailable.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_phonenumber_str"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getMeid",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getMeid",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the MEID (Mobile Equipment Identifier). Return null if MEID is not available. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getmeid"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getMeid/slot",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getMeid",
    "parameterTypes": [ "int" ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the MEID (Mobile Equipment Identifier). Return null if MEID is not available. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getmeid"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getNetworkSpecifier",
    "author": "M66B, OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getNetworkSpecifier",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the network specifier of the subscription ID pinned to the TelephonyManager.",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimSerialNumber",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimSerialNumber",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the serial number of the SIM, if applicable. Return null if it is unavailable. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getsimserialnumber",
    "settings":[ "phone.simserial" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSubscriberId",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSubscriberId",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the unique subscriber ID, for example, the IMSI for a GSM phone. Return null if it is unavailable.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_subscriberid",
    "settings":[ "phone.mcc", "phone.mnc", "phone.msin", "phone.subscriberid" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getPhoneType",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getPhoneType",
    "parameterTypes": [ ],
    "returnType": "int",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": " ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getphonetype",
    "settings":[ "phone.type" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSubscriberId/slot",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSubscriberId",
    "parameterTypes": [ "int" ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the unique subscriber ID, for example, the IMSI for a GSM phone. Return null if it is unavailable.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_subscriberid",
    "settings":[ "phone.subscriberid" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getVoiceMailAlphaTag",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getVoiceMailAlphaTag",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Retrieves the alphabetic identifier associated with the voice mail number.   ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getvoicemailalphatag",
    "settings":[ "phone.voicemailid" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getVoiceMailNumber",
    "author": "M66B",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getVoiceMailNumber",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the voice mail number. Return null if it is unavailable.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_phonenumber_str"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getNetworkCountryIso",
    "author": "M66B",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getNetworkCountryIso",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the ISO-3166-1 alpha-2 country code equivalent of the MCC (Mobile Country Code) of the current registered operator or the cell nearby, if available.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_countryiso",
    "settings":[ "phone.countryiso" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimCountryIso",
    "author": "M66B",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimCountryIso",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the ISO-3166-1 alpha-2 country code equivalent for the SIM provider's country code. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_countryiso",
    "settings":[ "phone.countryiso" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getNetworkOperator",
    "author": "M66B,hKFirEs,OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getNetworkOperator",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the numeric name (MCC+MNC) of current registered operator. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getnetworkoperator",
    "settings":[ "phone.mcc", "phone.mnc" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimOperator",
    "author": "M66B,hKFirEs,OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimOperator",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getnetworkoperator",
    "settings":[ "phone.mcc", "phone.mnc" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getNetworkOperatorName",
    "author": "M66B,OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getNetworkOperatorName",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the alphabetic name of current registered operator.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getnetworkoperatorname",
    "settings":[ "phone.isp" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimOperatorName",
    "author": "M66B,OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimOperatorName",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns the Service Provider Name (SPN).  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_telephony_getnetworkoperatorname",
    "settings":[ "phone.isp" ]
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getNeighboringCellInfo",
    "author": "M66B",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getNeighboringCellInfo",
    "parameterTypes": [ ],
    "returnType": "java.util.List",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "NA",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@generic_empty_list"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getAllCellInfo",
    "author": "M66B",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getAllCellInfo",
    "parameterTypes": [ ],
    "returnType": "java.util.List",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Requests all available cell information from all radios on the device including the camped/registered, serving, and neighboring cells. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@generic_empty_list",
    "settings":[ ]
  },

  {
    //added
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimSpecificCarrierId",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimSpecificCarrierId",
    "parameterTypes": [ ],
    "returnType": "int",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns fine-grained carrier ID of the current subscription.  ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakenumber_one",
    "settings":[ ]
  },

  {
    //added
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimCarrierIdName",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimCarrierIdName",
    "parameterTypes": [ ],
    "returnType": "java.lang.CharSequence",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Returns carrier id name of the current subscription. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one",
    "settings":[ ]
  },

  //isActive
  //swap_bool

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.toString",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "isActive",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one"
  },

  {
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.toString",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "toString",
    "parameterTypes": [ ],
    "returnType": "java.lang.String",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one"
  },

  {
    //added
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSubscriptionId",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSubscriptionId",
    "parameterTypes": [ ],
    "returnType": "int",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Return an appropriate subscription ID for any situation. ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakenumber_one",
    "settings":[ ]
  },

  {
    //added
    "builtin": false,
    "collection": "PrivacyEx",
    "group": "ID.Telephony",
    "name": "TelephonyManager.getSimSpecificCarrierIdName",
    "author": "OBC",
    "className": "android.telephony.TelephonyManager",
    "methodName": "getSimSpecificCarrierIdName",
    "parameterTypes": [ ],
    "returnType": "java.lang.CharSequence",
    "minSdk": 1,
    "maxSdk": 999,
    "version": 1,
    "description": "Similar like getSimCarrierIdName(), returns user-facing name of the specific carrier id returned by getSimSpecificCarrierId(). ",
    "enabled":true,
    "optional":true,
    "usage":true,
    "notify":false,
    "luaScript": "@id_fakestr_one",
    "settings":[ ]
  }
]