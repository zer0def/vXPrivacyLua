apply plugin: 'com.android.application'

//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()

//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "eu.faircode.xlua"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 140
        versionName "1.4.2.4"
        archivesBaseName = "XPL-EX-v$versionName-$versionCode"
    }
    /signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }/

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            useProguard = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            shrinkResources false
            minifyEnabled false
            useProguard = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def appcompat_version = "1.2.0"
    def swiperefresh_version = "1.1.0"
    def recyclerview_version = "1.1.0"
    def constraintlayout_version = "1.1.3"
    def material_version = "1.3.0"
    def glide_version = "4.11.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // https://mvnrepository.com/artifact/androidx.appcompat/appcompat
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // https://mvnrepository.com/artifact/androidx.swiperefreshlayout/swiperefreshlayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh_version"

    // https://mvnrepository.com/artifact/androidx.recyclerview/recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    //implementation "androidx.recyclerview:recyclerview-selection:$recyclerview_version"

    // https://mvnrepository.com/artifact/androidx.constraintlayout/constraintlayout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    // https://mvnrepository.com/artifact/com.google.android.material/material
    implementation "com.google.android.material:material:$material_version"

    // https://bumptech.github.io/glide/
    // https://mvnrepository.com/artifact/com.github.bumptech.glide/glide
    // { exclude group: "com.android.support" }
    implementation("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.android.support"
    }
    annotationProcessor 'androidx.annotation:annotation:1.1.0'
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // https://github.com/rovo89/XposedBridge/wiki/Using-the-Xposed-Framework-API
    // https://bintray.com/rovo89/de.robv.android.xposed/api
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'

    // http://www.luaj.org/luaj/3.0/README.html
    // https://mvnrepository.com/artifact/org.luaj/luaj-jse
    // implementation 'org.luaj:luaj-jse:3.0.1'
}
